from datetime import datetime


def parse_record(g):
    y = [int(x, 16) for x in g.split()]

    record_requested = y[12]

    records = []
    record_start = 13
    for i in range(record_requested):
        idx = record_start + i * 10
        if idx + 10 > len(y):
            break

        year = y[idx] + 2000
        month = y[idx + 1]
        day = y[idx + 2]
        hour = y[idx + 3]
        minute = y[idx + 4]
        second = y[idx + 5]
        battery = y[idx + 9]

        try:
            time = datetime(year, month, day, hour, minute, second)
        except ValueError:
            time = f"Invalid timestamp: {year}-{month}-{day} {hour}:{minute}:{second}"

        records.append({
            'record': i + 1,
            'time': time,
            'battery': battery
        })

    return {
        'record_requested': record_requested,
        'records': records
    }


# input_data = "0x2 0x80 0x0 0x50 0xc1 0x1 0x1 0x1 0x76 0x8 0x0 0x0 0x7 0x19 0x6 0x11 0xe 0x1f 0x22 0x10 0xff 0xff 0x62 0x19 0x6 0x11 0xe 0x21 0x1b 0x10 0xff 0xff 0x62 0x19 0x6 0x11 0xe 0x21 0x1c 0x2f 0xff 0xff 0x62 0x19 0x6 0x11 0xe 0x21 0x20 0x10 0xff 0xff 0x62 0x19 0x6 0x11 0xe 0x33 0x1d 0x10 0xff 0xff 0x62 0x0 0x1 0x1 0x0 0x0 0x15 0x10 0xff 0xff 0x64 0x19 0x6 0x11 0xe 0x36 0x4 0x10 0xff 0xff 0x64 0x5e"
#
# result = hex_data(input_data)
# print(f"Record requested: {result['record_requested']}")
# for record in result['records']:
#     print(f"Record {record['record']}:")
#     print(f"  Timestamp: {record['time']}")
#     print(f"  Battery%: {record['battery']}")